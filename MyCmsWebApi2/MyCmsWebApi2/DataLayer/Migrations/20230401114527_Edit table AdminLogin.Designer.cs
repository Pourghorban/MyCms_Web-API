// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCmsWebApi2.DataLayer.Context;

#nullable disable

namespace MyCmsWebApi2.DataLayer.Migrations
{
    [DbContext(typeof(CmsDbContext))]
    [Migration("20230401114527_Edit table AdminLogin")]
    partial class EdittableAdminLogin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.AdminLogIn", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ایمیل");

                    b.Property<string>("Passwords")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("کلمه عبور");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("نام کاربری");

                    b.HasKey("LoginId");

                    b.ToTable("Admin Login", (string)null);
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CommentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommentSubject")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("PageId")
                        .IsUnique();

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Images", b =>
                {
                    b.Property<int>("ImagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagesId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageGrupId")
                        .HasColumnType("int");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("ImagesId");

                    b.HasIndex("PageGrupId")
                        .IsUnique();

                    b.HasIndex("PageId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Page", b =>
                {
                    b.Property<int>("PageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ShowInSlider")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.Property<int>("pageGroupId")
                        .HasColumnType("int");

                    b.HasKey("PageId");

                    b.HasIndex("pageGroupId");

                    b.ToTable("Page", (string)null);
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.PageGroup", b =>
                {
                    b.Property<int>("PageGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageGroupId"));

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("PageGroupId");

                    b.ToTable("Page Groups", (string)null);
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Comments", b =>
                {
                    b.HasOne("MyCmsWebApi2.DataLayer.Model.Page", "page")
                        .WithOne("comments")
                        .HasForeignKey("MyCmsWebApi2.DataLayer.Model.Comments", "PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("page");
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Images", b =>
                {
                    b.HasOne("MyCmsWebApi2.DataLayer.Model.PageGroup", "pageGroup")
                        .WithOne("images")
                        .HasForeignKey("MyCmsWebApi2.DataLayer.Model.Images", "PageGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCmsWebApi2.DataLayer.Model.Page", "page")
                        .WithMany("images")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("page");

                    b.Navigation("pageGroup");
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Page", b =>
                {
                    b.HasOne("MyCmsWebApi2.DataLayer.Model.PageGroup", "pageGroup")
                        .WithMany("page")
                        .HasForeignKey("pageGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pageGroup");
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.Page", b =>
                {
                    b.Navigation("comments")
                        .IsRequired();

                    b.Navigation("images");
                });

            modelBuilder.Entity("MyCmsWebApi2.DataLayer.Model.PageGroup", b =>
                {
                    b.Navigation("images")
                        .IsRequired();

                    b.Navigation("page");
                });
#pragma warning restore 612, 618
        }
    }
}
